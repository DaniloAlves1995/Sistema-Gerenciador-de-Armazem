/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Forms;

import Conexao.ConectionReport;
import DAO.ClienteDao;
import DAO.ProdutoDao;
import DAO.SaidaDao;
import DAO.VendaDao;
import Entidades.Cliente;
import Entidades.Estoque;
import Entidades.Saida;
import Entidades.Venda;
import java.awt.HeadlessException;
import java.io.File;
import java.io.IOException;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRResultSetDataSource;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 ***********************************************************
 * ------------- ..::Danilo Alves Oliveira::.. ------------- *
 * **********************************************************
 *
 *
 */
//<editor-fold defaultstate="collapsed" desc="Departamento de Sistemas Desktop">
//</editor-fold>
//<editor-fold defaultstate="collapsed" desc="Tecnologia Java SE">
//</editor-fold>
public class PesquisarVendas extends javax.swing.JFrame {

    private List<Saida> saidas;
    private String d1, d2;
    private DefaultTableModel tmNota = new DefaultTableModel(null, new String[]{"Selecionar", "NÂº", "Cliente", "Valor(R$)", "Data"}) {
        Class[] types = new Class[]{
            Boolean.class, Object.class, Object.class, Object.class, Object.class
        };

        @Override
        public Class getColumnClass(int columnIndex) {
            return types[columnIndex];
        }
    };
    

    public PesquisarVendas() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setTitle("Pesquisar Vendas - SGE");
        ImageIcon imagemTituloJanela = new ImageIcon(getClass().getResource("/Imagens/icon-controle-de-estoqu.png"));
        this.setIconImage(imagemTituloJanela.getImage());
        this.saidas = new ArrayList<>();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();
        jLabel2 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTNota = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jBExcluir = new javax.swing.JButton();
        jBGerarN = new javax.swing.JButton();
        jBGerarN1 = new javax.swing.JButton();
        jBGerarN2 = new javax.swing.JButton();

        jToolBar1.setRollover(true);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(0, 131, 73));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel11.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Data inicial:");

        jLabel12.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Data final:");

        jDateChooser1.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jDateChooser1.setPreferredSize(new java.awt.Dimension(87, 28));
        jDateChooser1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jDateChooser1MouseClicked(evt);
            }
        });
        jDateChooser1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jDateChooser1PropertyChange(evt);
            }
        });
        jDateChooser1.addVetoableChangeListener(new java.beans.VetoableChangeListener() {
            public void vetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {
                jDateChooser1VetoableChange(evt);
            }
        });

        jDateChooser2.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jDateChooser2.setPreferredSize(new java.awt.Dimension(87, 28));
        jDateChooser2.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jDateChooser2PropertyChange(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel12)
                        .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        jLabel2.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel2.setText("Pesquisar Vendas");

        jPanel4.setBackground(new java.awt.Color(0, 131, 73));
        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel4.setForeground(new java.awt.Color(255, 255, 255));

        jTNota.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jTNota.setModel(tmNota);
        jTNota.setGridColor(new java.awt.Color(255, 255, 255));
        jTNota.setSelectionBackground(new java.awt.Color(0, 131, 73));
        jTNota.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTNotaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTNota);

        jLabel6.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Vendas:");

        jButton2.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/table.png"))); // NOI18N
        jButton2.setText("Detalhes");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jBExcluir.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jBExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/cart_delete.png"))); // NOI18N
        jBExcluir.setText("Excluir Venda");
        jBExcluir.setEnabled(false);
        jBExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBExcluirActionPerformed(evt);
            }
        });

        jBGerarN.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jBGerarN.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/acroread.png"))); // NOI18N
        jBGerarN.setText("Gerar Nota");
        jBGerarN.setEnabled(false);
        jBGerarN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBGerarNActionPerformed(evt);
            }
        });

        jBGerarN1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jBGerarN1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/acroread.png"))); // NOI18N
        jBGerarN1.setText("RelatÃ³rio");
        jBGerarN1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBGerarN1ActionPerformed(evt);
            }
        });

        jBGerarN2.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jBGerarN2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/acroread.png"))); // NOI18N
        jBGerarN2.setText("ROMANEIO");
        jBGerarN2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBGerarN2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(jLabel6)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBExcluir)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBGerarN)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBGerarN1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBGerarN2)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 441, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jBExcluir)
                    .addComponent(jBGerarN)
                    .addComponent(jBGerarN1)
                    .addComponent(jBGerarN2))
                .addGap(15, 15, 15))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(274, 274, 274))
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTNotaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTNotaMouseClicked
        if (jTNota.getSelectedRow() != -1) {
            jBExcluir.setEnabled(true);
            jBGerarN.setEnabled(true);
        }
    }//GEN-LAST:event_jTNotaMouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if (jTNota.getSelectedRow() != -1) {
            DetalhesVenda e = new DetalhesVenda();
            e.SetId(saidas.get(jTNota.getSelectedRow()).getId_s());
            e.SetPesquisarVendas(this);
            e.Iniciar();
            e.show();
        } else {
            JOptionPane.showMessageDialog(null, "Por favor selecione uma venda na tabela.", "..: SGE :..", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jBExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBExcluirActionPerformed
        if (jTNota.getSelectedRow() != -1) {
            try {
                int op = JOptionPane.showConfirmDialog(null, "VocÃª deseja excluir essa venda?", "..: SGE :..", JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE);
                if (op == 0) {
                    //Caso seja sim
                    Saida a = saidas.get(jTNota.getSelectedRow());
                    SaidaDao ndao = new SaidaDao();
                    ndao.Excluir(a);

                    VendaDao vdao = new VendaDao();
                    vdao.ExcluirVendas(a.getId_s());
                    JOptionPane.showMessageDialog(null, "Venda excluida com sucesso!", "..: SGE :..", JOptionPane.QUESTION_MESSAGE);
                    pesquisar();
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Erro ao acessar o banco! \n\r ERRO:" + ex, "..: SGE :..", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_jBExcluirActionPerformed

    private void jBGerarNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBGerarNActionPerformed
        if (jTNota.getSelectedRow() != -1) {
            relatorioNota();
        }
    }//GEN-LAST:event_jBGerarNActionPerformed

    private void jDateChooser1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jDateChooser1PropertyChange
        pesquisar();
    }//GEN-LAST:event_jDateChooser1PropertyChange

    private void jDateChooser1VetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {//GEN-FIRST:event_jDateChooser1VetoableChange

    }//GEN-LAST:event_jDateChooser1VetoableChange

    private void jDateChooser1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jDateChooser1MouseClicked

    }//GEN-LAST:event_jDateChooser1MouseClicked

    private void jDateChooser2PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jDateChooser2PropertyChange
        pesquisar();
    }//GEN-LAST:event_jDateChooser2PropertyChange

    private void jBGerarN1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBGerarN1ActionPerformed
        if (saidas.size() > 0) {
            try {
                VendaDao vdao = new VendaDao();
                vdao.adicionaPDF(d1, d2);

                relatorio();
                vdao.LimparPDF();
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Erro!" + ex, "..: SGE :..", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "NÃ£o houve nenhuma venda no perÃ­odo informado!", "..: SGE :..", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jBGerarN1ActionPerformed

    private void jBGerarN2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBGerarN2ActionPerformed
        if (saidas.size() > 0) {
            try {
                int verificar = 0;
                int qtd_total = 0;
                double preco_total = 0;
                String idss_s = "";
                VendaDao vdao = new VendaDao();

                ProdutoDao pdao = new ProdutoDao();
                List<Saida> listas = new ArrayList<>();
                List<Venda> listav = new ArrayList<>();
                List<Estoque> listae = new ArrayList<>();

                //fica somente com os ids das saidas selecionados
                for (int i = 0; i < saidas.size(); i++) {
                    if (Boolean.parseBoolean(tmNota.getValueAt(i, 0).toString()) == true) {
                        if (verificar == 0) {
                            verificar = 1;
                        }
                        Saida s = new Saida();
                        s.setId_s(saidas.get(i).getId_s());
                        listas.add(s);
                    }
                }
                //verifica se tem algum valor pesquisado na tabela
                if (verificar == 0) {
                    JOptionPane.showMessageDialog(null, "Para gerar o Romaneio vocÃª precisa selecionar pelo menos uma venda.", "..: SGE :..", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    //retorna a lista de ids de produtos de todas as saidas sem repetir
                    listav = vdao.getIdsProdSaida(listas);
                    SaidaDao sdao = new SaidaDao();
                    for (int i = 0; i < listav.size(); i++) {
                        int qtd = vdao.getQTDProdSaida(listas, listav.get(i).getId_p());
                        Estoque p = new Estoque();
                        p.setId_p(listav.get(i).getId_p());
                        p.setQtd(qtd);

                        //adiciona na tabela os valores para o resumo
                        sdao.adicionaPDFResumo(p);
                    }
                    relatorioResumo();
                    sdao.LimparPDFResumo();
                }

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Erro!" + ex, "..: SGE :..", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "NÃ£o houve nenhuma venda no perÃ­odo informado!", "..: SGE :..", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jBGerarN2ActionPerformed
 
    public void pesquisar() {
        if (jDateChooser1.getDate() != null && jDateChooser2.getDate() != null) {
            SimpleDateFormat sd = new SimpleDateFormat("yyyy-MM-dd");
            d1 = sd.format(jDateChooser1.getDate());
            d2 = sd.format(jDateChooser2.getDate());

            try {
                SaidaDao sdao = new SaidaDao();
                saidas = sdao.getLista(d1, d2, 8);
                mostrarSaidas(saidas);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Erro!" + ex, "..: SGE :..", JOptionPane.ERROR_MESSAGE);
            }
        }
    }

    //Mostra a pesquisa na tabela de notas
    private void mostrarSaidas(List<Saida> saidas) {

        SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd");
        SimpleDateFormat df2 = new SimpleDateFormat("dd/MM/yyyy");
        Date d;

        while (tmNota.getRowCount() > 0) {
            tmNota.removeRow(0);
        }
        if (!saidas.isEmpty()) {
            Object[] linha = new Object[]{Boolean.FALSE, null, null, null, null};
            for (int i = 0; i < saidas.size(); i++) {
                try {
                    tmNota.addRow(linha);
                    tmNota.setValueAt(saidas.get(i).getId_s(), i, 1);
                    Cliente c = new Cliente();
                    try {
                        ClienteDao cdao = new ClienteDao();
                        c = cdao.GetCliente(saidas.get(i).getId_c());
                    } catch (SQLException ex) {
                        JOptionPane.showMessageDialog(null, "Erro!" + ex, "..: SGE :..", JOptionPane.ERROR_MESSAGE);
                    }
                    tmNota.setValueAt(c.getNome(), i, 2);
                    tmNota.setValueAt(saidas.get(i).getTotal() + "", i, 3);
                    d = df.parse(saidas.get(i).getData());
                    tmNota.setValueAt(df2.format(d), i, 4);
                } catch (ParseException ex) {
                    JOptionPane.showMessageDialog(null, "Erro!" + ex, "..: SGE :..", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PesquisarVendas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PesquisarVendas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PesquisarVendas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PesquisarVendas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new PesquisarVendas().setVisible(true);
        });
    }

    //Cria o relatorio da lista de vendas
    private void relatorio() {
        try {
            Date data = new Date();
            int ano = data.getYear() + 1900;
            int dia = data.getDate();
            int mes = data.getMonth() + 1;
            String dias = null, mess = null;
            if (dia < 10) {
                dias = "0" + dia;
            } else {
                dias = "" + dia;
            }
            if (mes < 10) {
                mess = "0" + mes;
            } else {
                mess = "" + mes;
            }
            String nome = "RelatÃ³rio_Vendas_DATA_" + dias + "-" + mess + "-" + ano;
            String arquivo = nome;
            ConectionReport con = new ConectionReport();
            //diretorio que vai salvar
            File dir = new File("c:/SGE");
            if (!dir.exists()) {
                dir.mkdir();
            }
            File l = new File("c:/SGE/Relatorios");
            if (!l.exists()) {
                l.mkdir();
            }
            File li = new File("c:/SGE/Relatorios/Vendas");
            if (!li.exists()) {
                li.mkdir();
            }
            String MostrarRelatorio;
            String path = "c:/SGE/Relatorios/Vendas";
            con.connect();
            con.executeSQL("select * from produto, venda, saida, cliente, pdf_venda where venda.id_s = saida.id_s and produto.id_p = venda.id_p and saida.id_c = cliente.id_c and saida.data between '" + d1 + "' and '" + d2 + "' order by saida.data");
            JRResultSetDataSource jrRS = new JRResultSetDataSource(con.resultset);
            //referencia o jasper
            JasperPrint jp = JasperFillManager.fillReport(getClass().getResourceAsStream("/Jasper/RelatorioSaidas.jasper"), new HashMap(), jrRS);
            JasperViewer jv = new JasperViewer(jp, false);
            jv.setVisible(true);
            jv.setTitle("RelatÃ³rio de Estoque - .: SGE :.");
            jv.setIconImage(new ImageIcon(getClass().getResource("/Imagens/icon-controle-de-estoqu.png")).getImage());
            jv.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
            // JasperViewer.viewReport(jp,true);
            File arq = new File(path + arquivo + ".pdf");
            if (arq.exists()) {
                int result = JOptionPane.showConfirmDialog(null, "O relatÃ³rio " + arquivo + ".pdf jÃ¡ existe.\n Dezeja substitui-lo?", "SGE", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                if (result == JOptionPane.YES_NO_OPTION) {
                    JasperExportManager.exportReportToPdfFile(jp, path + arquivo + ".pdf");
                    MostrarRelatorio = path + arquivo + ".pdf";
                    JOptionPane.showMessageDialog(null, "OperaÃ§Ã£o Realizada com sucesso!\n Salvo em: " + path + arquivo + ".pdf", "SGE", JOptionPane.INFORMATION_MESSAGE);
                    try {
                        Runtime.getRuntime().exec("rundll32 SHELL32.DLL,ShellExec_RunDLL " + MostrarRelatorio);
                    } catch (IOException e) {
                        JOptionPane.showMessageDialog(null, "Erro ao acessar arquivo! \n\r ERRO:" + e.getStackTrace(), "SGE", JOptionPane.ERROR_MESSAGE);
                    }
                }
            } else {

                JasperExportManager.exportReportToPdfFile(jp, path + arquivo + ".pdf");
                MostrarRelatorio = path + arquivo + ".pdf";
                JOptionPane.showMessageDialog(null, "OperaÃ§Ã£o Realizada consucesso!\n Salvo em: " + path + arquivo + ".pdf", "SGE", JOptionPane.INFORMATION_MESSAGE);
                try {
                    Runtime.getRuntime().exec("rundll32 SHELL32.DLL,ShellExec_RunDLL " + MostrarRelatorio);
                } catch (IOException e) {
                    JOptionPane.showMessageDialog(null, "Erro ao acessar arquivo! \n\r ERRO:" + e.getMessage(), "SGE", JOptionPane.ERROR_MESSAGE);
                }

            }

        } catch (JRException ex) {
            Logger.getLogger(PesquisarVendas.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBExcluir;
    private javax.swing.JButton jBGerarN;
    private javax.swing.JButton jBGerarN1;
    private javax.swing.JButton jBGerarN2;
    private javax.swing.JButton jButton2;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTNota;
    private javax.swing.JToolBar jToolBar1;
    // End of variables declaration//GEN-END:variables

    //Cria o relatorio da nota
    private void relatorioNota() {
        Date data = new Date();

        int ano = data.getYear() + 1900;
        int dia = data.getDate();
        int mes = data.getMonth() + 1;
        String dias = null, mess = null;
        if (dia < 10) {
            dias = "0" + dia;
        } else {
            dias = "" + dia;
        }
        if (mes < 10) {
            mess = "0" + mes;
        } else {
            mess = "" + mes;
        }
        String nome = "NOTA_VENDA_N_" + saidas.get(jTNota.getSelectedRow()).getId_s();
        String arquivo = nome;

        ConectionReport con = new ConectionReport();

//diretorio que vai salvar
        File dir = new File("c:/SGE");
        if (!dir.exists()) {
            dir.mkdir();
        }
        File l = new File("c:/SGE/Relatorios");
        if (!l.exists()) {
            l.mkdir();
        }
        File li = new File("c:/SGE/Relatorios/NotasVendas");
        if (!li.exists()) {
            li.mkdir();
        }

        String MostrarRelatorio;
        String path = "c:/SGE/Relatorios/NotasVendas/";
        try {
            con.connect();
            con.executeSQL("select saida.*, produto.*, venda.*, cliente.*, funcionario.nome_fun from  saida, produto, venda, cliente, funcionario where saida.id_s=" + saidas.get(jTNota.getSelectedRow()).getId_s() + " and saida.id_s=venda.id_s and venda.id_p=produto.id_p and saida.id_c=cliente.id_c and funcionario.id_fun=saida.id_fun;");

            JRResultSetDataSource jrRS = new JRResultSetDataSource(con.resultset);
            //referencia o jasper
            JasperPrint jp = JasperFillManager.fillReport(getClass().getResourceAsStream("/Jasper/NotaVenda.jasper"), new HashMap(), jrRS);
            JasperViewer jv = new JasperViewer(jp, false);
            jv.setVisible(true);
            jv.setTitle("Nota de Venda - .: SGE :.");
            jv.setIconImage(new ImageIcon(getClass().getResource("/Imagens/icon-controle-de-estoqu.png")).getImage());
            jv.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
            // JasperViewer.viewReport(jp,true);
            File arq = new File(path + arquivo + ".pdf");
            if (arq.exists()) {
                int result = JOptionPane.showConfirmDialog(null, "O relatÃ³rio " + arquivo + ".pdf jÃ¡ existe.\n Dezeja substitui-lo?", "SGE", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                if (result == JOptionPane.YES_NO_OPTION) {
                    JasperExportManager.exportReportToPdfFile(jp, path + arquivo + ".pdf");
                    MostrarRelatorio = path + arquivo + ".pdf";
                    JOptionPane.showMessageDialog(null, "OperaÃ§Ã£o Realizada com sucesso!\n Salvo em: " + path + arquivo + ".pdf", "SGE", JOptionPane.INFORMATION_MESSAGE);
                    try {
                        Runtime.getRuntime().exec("rundll32 SHELL32.DLL,ShellExec_RunDLL " + MostrarRelatorio);
                    } catch (IOException e) {
                        JOptionPane.showMessageDialog(null, "Erro ao acessar arquivo! \n\r ERRO:" + e.getStackTrace(), "SGE", JOptionPane.ERROR_MESSAGE);
                    }
                }
            } else {

                JasperExportManager.exportReportToPdfFile(jp, path + arquivo + ".pdf");
                MostrarRelatorio = path + arquivo + ".pdf";
                JOptionPane.showMessageDialog(null, "OperaÃ§Ã£o Realizada consucesso!\n Salvo em: " + path + arquivo + ".pdf", "SGE", JOptionPane.INFORMATION_MESSAGE);
                try {
                    Runtime.getRuntime().exec("rundll32 SHELL32.DLL,ShellExec_RunDLL " + MostrarRelatorio);
                } catch (IOException e) {
                    JOptionPane.showMessageDialog(null, "Erro ao acessar arquivo! \n\r ERRO:" + e.getMessage(), "SGE", JOptionPane.ERROR_MESSAGE);
                }
            }

        } catch (HeadlessException | JRException erro) {
            JOptionPane.showMessageDialog(null, "Erro!" + erro, "SGE", JOptionPane.INFORMATION_MESSAGE);
        }
    }

    //Cria o relatorio da nota
    private void relatorioResumo() {
        Date data = new Date();

        int ano = data.getYear() + 1900;
        int dia = data.getDate();
        int mes = data.getMonth() + 1;
        String dias = null, mess = null;
        if (dia < 10) {
            dias = "0" + dia;
        } else {
            dias = "" + dia;
        }
        if (mes < 10) {
            mess = "0" + mes;
        } else {
            mess = "" + mes;
        }
        String nome = "ROMANEIO_VENDA_DATA_" + dias + "-" + mess + "-" + ano;
        String arquivo = nome;

        ConectionReport con = new ConectionReport();

        //gerar string sql;
        String sql = "select produto.*, pdf_resumon.* from produto, pdf_resumon where pdf_resumon.id_p = produto.id_p;";

        //diretorio que vai salvar
        File dir = new File("c:/SGE");
        if (!dir.exists()) {
            dir.mkdir();
        }
        File l = new File("c:/SGE/Relatorios");
        if (!l.exists()) {
            l.mkdir();
        }
        File li = new File("c:/SGE/Relatorios/NotasVendas");
        if (!li.exists()) {
            li.mkdir();
        }

        String MostrarRelatorio;
        String path = "c:/SGE/Relatorios/NotasVendas/";
        try {
            con.connect();
            con.executeSQL(sql);

            JRResultSetDataSource jrRS = new JRResultSetDataSource(con.resultset);
            //referencia o jasper
            JasperPrint jp = JasperFillManager.fillReport(getClass().getResourceAsStream("/Jasper/ResumoVendas.jasper"), new HashMap(), jrRS);
            JasperViewer jv = new JasperViewer(jp, false);
            jv.setVisible(true);
            jv.setTitle("Nota de Venda - .: SGE :.");
            jv.setIconImage(new ImageIcon(getClass().getResource("/Imagens/icon-controle-de-estoqu.png")).getImage());
            jv.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
            // JasperViewer.viewReport(jp,true);
            File arq = new File(path + arquivo + ".pdf");
            if (arq.exists()) {
                int result = JOptionPane.showConfirmDialog(null, "O relatÃ³rio " + arquivo + ".pdf jÃ¡ existe.\n Dezeja substitui-lo?", "SGE", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                if (result == JOptionPane.YES_NO_OPTION) {
                    JasperExportManager.exportReportToPdfFile(jp, path + arquivo + ".pdf");
                    MostrarRelatorio = path + arquivo + ".pdf";
                    JOptionPane.showMessageDialog(null, "OperaÃ§Ã£o Realizada com sucesso!\n Salvo em: " + path + arquivo + ".pdf", "SGE", JOptionPane.INFORMATION_MESSAGE);
                    try {
                        Runtime.getRuntime().exec("rundll32 SHELL32.DLL,ShellExec_RunDLL " + MostrarRelatorio);
                    } catch (IOException e) {
                        JOptionPane.showMessageDialog(null, "Erro ao acessar arquivo! \n\r ERRO:" + e.getStackTrace(), "SGE", JOptionPane.ERROR_MESSAGE);
                    }
                }
            } else {

                JasperExportManager.exportReportToPdfFile(jp, path + arquivo + ".pdf");
                MostrarRelatorio = path + arquivo + ".pdf";
                JOptionPane.showMessageDialog(null, "OperaÃ§Ã£o Realizada consucesso!\n Salvo em: " + path + arquivo + ".pdf", "SGE", JOptionPane.INFORMATION_MESSAGE);
                try {
                    Runtime.getRuntime().exec("rundll32 SHELL32.DLL,ShellExec_RunDLL " + MostrarRelatorio);
                } catch (IOException e) {
                    JOptionPane.showMessageDialog(null, "Erro ao acessar arquivo! \n\r ERRO:" + e.getMessage(), "SGE", JOptionPane.ERROR_MESSAGE);
                }

            }
        } catch (HeadlessException | JRException erro) {
            JOptionPane.showMessageDialog(null, "Erro!" + erro, "SGE", JOptionPane.INFORMATION_MESSAGE);
        }
    }

}
