/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Forms;

import Connection.ConectionReport;
import DAO.StockDao;
import DAO.ProductDao;
import DAO.OutStockDao;
import DAO.SaleDao;
import DAO.SalesmanDao;
import Entities.Customer;
import Entities.Stock;
import Entities.Product;
import Entities.OutStock;
import Entities.Sale;
import Entities.Salesman;
import Utils.ManageFields;
import java.awt.Color;
import java.awt.HeadlessException;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.io.File;
import java.io.IOException;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRResultSetDataSource;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 ***********************************************************
 * ------------- ..::Danilo Alves Oliveira::.. ------------- *
 * **********************************************************
 *
 *
 */

public class RegisterSale extends javax.swing.JFrame {

    private final ManageFields manageFields;
    private List<Sale> venda;
    private DefaultListModel dlista, dlistam;
    
    private DefaultTableModel tmVenda = new DefaultTableModel(null, new String[]{"Product", "Price (R$)", "Total", "Total (R$)"});
    private ListSelectionModel lsmVenda;
    private Product product;
    private List<Salesman> Sellers;
    private Customer cliente;
    
    int idcliente;
    int idnota = 0;
    char l;
    int mais = -1;//para check se já clicou na seta para baixo
    int contr = 1;//para controlar quando o usuário percorre o product na lista
    int ilistp = -1;//índice para referenciar a posição selecionada da lista com a lista <product> 
    int qtd = 0;//para contar The amount ofproducts vendidos
    int contrenter = 0;
    int tipo = 0;
    boolean orcamento = false;
    int la = 0;//para check se clicou no Ctrl

    public RegisterSale() {
        initComponents();

        this.setLocationRelativeTo(null);
        this.setTitle("Register sale - WMS");
        ImageIcon iconWindow = new ImageIcon(getClass().getResource("/Imagens/windows_icon.png"));
        this.setIconImage(iconWindow.getImage());

        //inicializa a lista vendas
        venda = new ArrayList<Sale>();

        PreencherSellers();

        //impede a edição de alguns campos
        jTValor.setEditable(false);
        jTAddress.setEditable(false);
        jLTotal.setVisible(false);
        try {
            //Para show o id dessa nova nota
            OutStockDao ndao = new OutStockDao();
            idnota = ndao.getLastInvoiceId();
            idnota++;
            jLNVenda.setText("Sale Nº:" + idnota);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error to access the database! \n\r ERROR:" + ex, "..: WMS :..", JOptionPane.ERROR_MESSAGE);
        }
        
        //setup manage class
        this.manageFields = new ManageFields();
        this.manageFields.setFields(Arrays.asList(jTCliente, jTProduct, jTTotal));
        this.manageFields.setEvent();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTProduct = new javax.swing.JTextField();
        jLNVenda = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jTValor = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel7 = new javax.swing.JLabel();
        jTPreco = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel5 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jTCliente = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jTAddress = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jTTotal = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox();
        jLabel15 = new javax.swing.JLabel();
        jTTotal_est = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTVendas = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLTotal = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jTTotalg = new javax.swing.JTextField();
        jCheckBox1 = new javax.swing.JCheckBox();
        jLabel4 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel2.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel2.setText("Register sale");

        jPanel2.setBackground(new java.awt.Color(0, 131, 73));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Customer data:");

        jLabel3.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Product:");

        jTProduct.setEditable(false);
        jTProduct.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jTProduct.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTProductFocusLost(evt);
            }
        });
        jTProduct.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTProductMouseClicked(evt);
            }
        });
        jTProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTProductActionPerformed(evt);
            }
        });
        jTProduct.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTProductKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTProductKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTProductKeyTyped(evt);
            }
        });

        jLNVenda.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLNVenda.setForeground(new java.awt.Color(255, 255, 255));
        jLNVenda.setText("Sale Nº:33333");

        jLabel6.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Value (R$):");

        jTValor.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jTValor.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTValorFocusGained(evt);
            }
        });
        jTValor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTValorKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTValorKeyReleased(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Price(R$):");

        jTPreco.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jTPreco.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        jLabel5.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Sale data:");

        jLabel8.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Customer:");

        jTCliente.setEditable(false);
        jTCliente.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jTCliente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTClienteMouseClicked(evt);
            }
        });
        jTCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTClienteKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTClienteKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTClienteKeyTyped(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Address:");

        jTAddress.setEditable(false);
        jTAddress.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jTAddress.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTAddressKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTAddressKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTAddressKeyTyped(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Quant.:");

        jTTotal.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jTTotal.setText("1");
        jTTotal.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTTotalFocusLost(evt);
            }
        });
        jTTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTTotalActionPerformed(evt);
            }
        });
        jTTotal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTTotalKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTTotalKeyReleased(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("Seller:");

        jComboBox2.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jComboBox2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jComboBox2KeyPressed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("Amount in stock:");

        jTTotal_est.setEditable(false);
        jTTotal_est.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jTTotal_est.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTTotal_estFocusLost(evt);
            }
        });
        jTTotal_est.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTTotal_estActionPerformed(evt);
            }
        });
        jTTotal_est.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTTotal_estKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTTotal_estKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTProduct)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jTPreco, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel15)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTTotal_est, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTValor, javax.swing.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE))))
                    .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel9)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTAddress)
                            .addComponent(jTCliente)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 438, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLNVenda)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLNVenda)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jTAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTProduct, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jTTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15)
                    .addComponent(jTTotal_est, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(jTPreco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(jTValor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(0, 131, 73));
        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jButton1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/disk.png"))); // NOI18N
        jButton1.setText("Save");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jButton1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton1KeyPressed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/cancel.png"))); // NOI18N
        jButton2.setText("Cancel");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(312, 312, 312)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap())
        );

        jPanel4.setBackground(new java.awt.Color(0, 131, 73));
        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jTVendas.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jTVendas.setModel(tmVenda);
        jTVendas.setSelectionBackground(new java.awt.Color(0, 131, 73));
        jTVendas.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        lsmVenda = jTVendas.getSelectionModel();
        lsmVenda.addListSelectionListener(new ListSelectionListener() { public void valueChanged(ListSelectionEvent e) { if (! e.getValueIsAdjusting()){ jTSelectedRowTable(jTVendas); } }
        });
        jTVendas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTVendasKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(jTVendas);

        jButton3.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/chec2.png"))); // NOI18N
        jButton3.setText("Finish");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jButton3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton3KeyPressed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/delete.png"))); // NOI18N
        jButton4.setText("Remove");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jButton4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton4KeyPressed(evt);
            }
        });

        jLTotal.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLTotal.setForeground(new java.awt.Color(255, 255, 255));
        jLTotal.setText("jLabel13");

        jLabel14.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("General total.:");

        jTTotalg.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N

        jCheckBox1.setBackground(new java.awt.Color(0, 131, 73));
        jCheckBox1.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jCheckBox1.setForeground(new java.awt.Color(255, 255, 255));
        jCheckBox1.setSelected(true);
        jCheckBox1.setText("Generate invoice");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLTotal)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTTotalg, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1))
                .addGap(32, 32, 32)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton3)
                    .addComponent(jButton4)
                    .addComponent(jCheckBox1))
                .addGap(23, 23, 23))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jCheckBox1)
                        .addGap(30, 30, 30)
                        .addComponent(jButton3)
                        .addGap(18, 18, 18)
                        .addComponent(jButton4))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel14)
                        .addComponent(jTTotalg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLTotal))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel4.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel4.setText("Ctrl+C = add a custom.");

        jLabel10.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel10.setText("Ctrl+F = Finish sale.");

        jLabel11.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel11.setText("Ctrl+P = add a product.");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel4)
                        .addGap(24, 24, 24)
                        .addComponent(jLabel11)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel10)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(380, 380, 380)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTProductKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTProductKeyPressed
        EventoChamarPoduto(evt);
    }//GEN-LAST:event_jTProductKeyPressed

    private void jTProductKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTProductKeyTyped

    }//GEN-LAST:event_jTProductKeyTyped

    private void jTProductKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTProductKeyReleased

    }//GEN-LAST:event_jTProductKeyReleased

    public void CalcularValorUnid() {
        double valor = Double.parseDouble(jTPreco.getText()) * Double.parseDouble(jTTotal.getText());
        DecimalFormat num = new DecimalFormat("0.00");
        jTValor.setText((num.format(valor)) + "");
        jTValor.setText(jTValor.getText().replace(",", "."));
    }
    private void jTClienteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTClienteKeyPressed
        EventoChamarPoduto(evt);
    }//GEN-LAST:event_jTClienteKeyPressed

    private void jTClienteKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTClienteKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_jTClienteKeyReleased

    private void jTClienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTClienteKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_jTClienteKeyTyped

    private void jTAddressKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTAddressKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTAddressKeyPressed

    private void jTAddressKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTAddressKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_jTAddressKeyReleased

    private void jTAddressKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTAddressKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_jTAddressKeyTyped

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        AdicionarP();

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTProductFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTProductFocusLost

    }//GEN-LAST:event_jTProductFocusLost
    int contfocus = 0;
    private void jTTotalFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTTotalFocusLost

    }//GEN-LAST:event_jTTotalFocusLost

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        if (jTVendas.getSelectedRow() != -1) {
            double tot = venda.get(jTVendas.getSelectedRow()).getPrice();
            DecimalFormat num = new DecimalFormat("0.00");
            jTTotalg.setText(num.format((Double.parseDouble(jTTotalg.getText()) - tot)) + "");
            jTTotalg.setText(jTTotalg.getText().replace(",", "."));
            venda.remove(jTVendas.getSelectedRow());
            atualizarTabela(venda);
            qtd--;
            jLTotal.setText(qtd + " Items");
            if (qtd == 0) {
                jLTotal.setVisible(false);
            }
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jTValorKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTValorKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_jTValorKeyReleased

    private void jTTotalKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTTotalKeyReleased
        if (evt.getKeyCode() == 10) {
            if (!jTTotal.getText().equals("")) {
                contrenter = 1;

                //calcula o valor do prodto com essa área
                double valor = Double.parseDouble(jTPreco.getText()) * Double.parseDouble(jTTotal.getText());
                DecimalFormat num = new DecimalFormat("0.00");
                jTValor.setText(num.format(valor) + "");
                jTValor.setText(jTValor.getText().replace(",", "."));
                AdicionaVenda();
            }

        }
    }//GEN-LAST:event_jTTotalKeyReleased

    private void jTTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTTotalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTTotalActionPerformed

    private void jTTotalKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTTotalKeyPressed

    }//GEN-LAST:event_jTTotalKeyPressed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        FinalizarTotal();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jTClienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTClienteMouseClicked
        SearchCustomer b = new SearchCustomer();
        b.SetVenda(this);
        b.SetTipo(0);
        b.show();
        jTCliente.setBackground(Color.WHITE);
    }//GEN-LAST:event_jTClienteMouseClicked

    private void jTProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTProductActionPerformed

    }//GEN-LAST:event_jTProductActionPerformed

    private void jTProductMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTProductMouseClicked
        SearchProduct b = new SearchProduct();
        b.SetSaidaVenda(this);
        b.SetTipo(1);
        b.show();
        jTProduct.setBackground(Color.WHITE);
    }//GEN-LAST:event_jTProductMouseClicked

    private void jTTotal_estFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTTotal_estFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_jTTotal_estFocusLost

    private void jTTotal_estActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTTotal_estActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTTotal_estActionPerformed

    private void jTTotal_estKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTTotal_estKeyPressed
        EventoChamarPoduto(evt);
    }//GEN-LAST:event_jTTotal_estKeyPressed

    private void jTTotal_estKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTTotal_estKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_jTTotal_estKeyReleased

    private void jTValorFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTValorFocusGained
        CalcularValor();
    }//GEN-LAST:event_jTValorFocusGained

    private void jComboBox2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBox2KeyPressed
        EventoChamarPoduto(evt);
    }//GEN-LAST:event_jComboBox2KeyPressed

    private void jTValorKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTValorKeyPressed

    }//GEN-LAST:event_jTValorKeyPressed

    private void jButton1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton1KeyPressed
        EventoChamarPoduto(evt);
    }//GEN-LAST:event_jButton1KeyPressed

    private void jButton4KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton4KeyPressed
        EventoChamarPoduto(evt);
    }//GEN-LAST:event_jButton4KeyPressed

    private void jButton3KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton3KeyPressed
        EventoChamarPoduto(evt);
    }//GEN-LAST:event_jButton3KeyPressed

    private void jTVendasKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTVendasKeyPressed
        EventoChamarPoduto(evt);
    }//GEN-LAST:event_jTVendasKeyPressed

    public void FinalizarTotal() {
        if (venda.size() > 0) {
            Finalizar();
            jTTotalg.setText("");
            jLTotal.setVisible(false);
            qtd = 0;
            if (jCheckBox1.isSelected()) {
                report();
            }
            try {

                //Para show o id dessa nova nota
                OutStockDao ndao = new OutStockDao();
                idnota = ndao.getLastInvoiceId();
                idnota++;
                jLNVenda.setText("Sale Nº:" + idnota);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Error to access the database! \n\r ERROR:" + ex, "..: WMS :..", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "You need to add a sale before finalizing.", "WMS", JOptionPane.INFORMATION_MESSAGE);
        }
    }

    public void AdicionarP() {
        if (tipo == 0) {
            if (this.manageFields.checkFields()) {
                if (jComboBox2.getSelectedIndex() != -1) {
                    CalcularValor();
                    if (Integer.parseInt(jTTotal.getText()) <= Integer.parseInt(jTTotal_est.getText())) {
                        AdicionaVenda();
                    } else {
                        JOptionPane.showMessageDialog(null, "The quantity informed cannot be greater than the stock.", "..: WMS :..", JOptionPane.WARNING_MESSAGE);
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "It is necessary to select a seller.", "..: WMS :..", JOptionPane.WARNING_MESSAGE);
                }
            }
        } else {
            if (this.manageFields.checkFields()) {
                AdicionaVenda();
            }
        }
    }

    public void CalcularValor() {
        try {
            int d = Integer.parseInt(jTTotal.getText());
            jTTotal.setText(d + "");

            //calcula o valor do prodto com essa área
            double valor = Double.parseDouble(jTPreco.getText()) * Double.parseDouble(jTTotal.getText());
            DecimalFormat num = new DecimalFormat("0.00");
            jTValor.setText(num.format(valor) + "");
            jTValor.setText(jTValor.getText().replace(",", "."));
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Quantity is invalid.", "..: WMS :..", JOptionPane.WARNING_MESSAGE);
            jTTotal.setText("");
            jTValor.setText("");
            jTTotal.requestFocus();
        }
    }

    public void SetCliente(Customer cliente) {
        this.cliente = cliente;
        jTCliente.setText(cliente.getName());
        jTAddress.setText(cliente.getAddress());
        idcliente = this.cliente.getId();
    }

    //metodo para setar o product que foi escolhido
    public void SetProduct(Product product) {

        jTProduct.setText(product.getProduct());
        jTPreco.setText(product.getPrice() + "");

        try {
            //busca a qtd desse product em stock
            StockDao edao = new StockDao();
            Stock stock = edao.getStock(product.getId());
            if (stock == null) {
                Stock e = new Stock();
                e.setId_p(product.getId());
                e.setAmount(0);
                edao.add(e);

                stock = edao.getStock(product.getId());
            }
            jTTotal_est.setText(stock.getAmount() + "");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error!" + ex, "..: WMS :..", JOptionPane.ERROR_MESSAGE);
        }

        this.product = product;
        jTTotal_est.requestFocus();
    }

    //adiciona na lista a venda do product
    public void AdicionaVenda() {

        Sale v = new Sale();
        v.setId_prod(product.getId());
        v.setPrice(Double.parseDouble(jTValor.getText()));
        v.setAmount(Integer.parseInt(jTTotal.getText()));
        v.setValueProduct(Double.parseDouble(jTPreco.getText()));

        venda.add(v);
        atualizarTabela(venda);

        jTValor.setText(jTValor.getText().replace(",", "."));

        double tot = Double.parseDouble(jTValor.getText());
        double tacu = 0;
        if (!jTTotalg.getText().equals("")) {
            jTTotalg.setText(jTTotalg.getText().replace(",", "."));
            tacu = Double.parseDouble(jTTotalg.getText());
        }
        DecimalFormat num = new DecimalFormat("0.00");
        jTTotalg.setText((num.format(tot + tacu)) + "");
        jTTotalg.setText(jTTotalg.getText().replace(",", "."));
        qtd++;
        jLTotal.setText(qtd + " Items");
        jLTotal.setVisible(true);

        JOptionPane.showMessageDialog(null, "Product added to the sale!", "..: WMS :..", JOptionPane.INFORMATION_MESSAGE);
        Clear();
    }

    //método que limpa os campos para a venda de outro product
    public void Clear() {
        jTPreco.setText("");
        jTProduct.setText("");
        jTTotal_est.setText("");
        jTValor.setText("");
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Sale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Sale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Sale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Sale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new RegisterSale().setVisible(true);
        });
    }

    private void atualizarTabela(List<Entities.Sale> venda) {

        while (tmVenda.getRowCount() > 0) {
            tmVenda.removeRow(0);
        }

        String[] linha = new String[]{null, null, null, null};

        for (int i = 0; i < venda.size(); i++) {
            tmVenda.addRow(linha);
            String product_local = "";
            try {
                //Pega o product com o id na lista da venda
                ProductDao dao = new ProductDao();
                Product p = dao.getProduct(venda.get(i).getId_prod());
                product_local = p.getProduct();

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Error to access the database! \n\r ERROR:" + ex, "..: WMS :..", JOptionPane.ERROR_MESSAGE);
            }

            tmVenda.setValueAt(product_local, i, 0);
            tmVenda.setValueAt(venda.get(i).getValueProduct(), i, 1);
            tmVenda.setValueAt(venda.get(i).getAmount(), i, 2);
            tmVenda.setValueAt(venda.get(i).getPrice(), i, 3);
        }
    }

    private void jTSelectedRowTable(JTable tabela) {

    }

    //metodo para calcular a área apartir do tamanho
    public double CalculaArea(String tamanho) {
        double h = (Double.parseDouble(tamanho.split("x")[0])) / 100;
        double w = (Double.parseDouble(tamanho.split("x")[1])) / 100;

        return h * w;
    }

    //metodo para preencher o combobox dos Sellers
    public final void PreencherSellers() {
        try {
            SalesmanDao a = new SalesmanDao();
            Sellers = a.getList("");
            for (int y = 0; y < Sellers.size(); y++) {
                jComboBox2.addItem(Sellers.get(y).getName());
            }

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error to access the database! \n\r ERROR:" + ex, "..: WMS :..", JOptionPane.ERROR_MESSAGE);
        }
    }

    //Cria o report da nota
    private void report(int idnota) {
        Date data = new Date();

        int year = data.getYear() + 1900;
        int day = data.getDate();
        int month = data.getMonth() + 1;
        String days = null, months = null;
        if (day < 10) {
            days = "0" + day;
        } else {
            days = "" + day;
        }
        if (month < 10) {
            months = "0" + month;
        } else {
            months = "" + month;
        }
        String Name = "Budget" + idnota + " DATE" + days + "-" + months + "-" + year;
        String file = Name;

        ConectionReport con = new ConectionReport();

        //diretorio que vai salvar
        File dir = new File("c:/Reports/Budget");
        if (!dir.exists()) {
            if (dir.mkdir()) {

            } else {

            }
        }
        File l = new File("c:/Reports/Budget/");
        l.mkdir();

        String showReport;
        String path = "c:/Reports/Budget/";
        try {
            con.connect();
            con.executeSQL("select nota.*, product.*, venda.*, cliente.*, pdf.* from  nota, product, venda, cliente, pdf where nota.id=" + idnota + " and nota.id=venda.id_n and venda.id_p=product.id and nota.id_c=cliente.id and pdf.id_n=" + idnota + ";");

            JRResultSetDataSource jrRS = new JRResultSetDataSource(con.resultset);
            //referencia o jasper
            JasperPrint jp = JasperFillManager.fillReport(getClass().getResourceAsStream("/Jasper/Nota.jasper"), new HashMap(), jrRS);
            JasperViewer jv = new JasperViewer(jp, false);
            jv.setVisible(true);
            jv.setTitle("Invoice - WMS");
            //jv.setIconImage(new ImageIcon(getClass().getResource("/Imagens/1349387239_gems.jpg")).getImage());
            jv.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
            // JasperViewer.viewReport(jp,true);
            File arq = new File(path + file + ".pdf");
            if (arq.exists()) {
                int result = JOptionPane.showConfirmDialog(null, "The report" + file + ".pdf already exists.\n Do you want to replace it?", "..: WMS :..", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                if (result == JOptionPane.YES_NO_OPTION) {
                    JasperExportManager.exportReportToPdfFile(jp, path + file + ".pdf");
                    showReport = path + file + ".pdf";
                    JOptionPane.showMessageDialog(null, "Operation finished with success!\n Saved in: " + path + file + ".pdf", "..: WMS :..", JOptionPane.INFORMATION_MESSAGE);
                    try {
                        Runtime.getRuntime().exec("rundll32 SHELL32.DLL,ShellExec_RunDLL " + showReport);
                    } catch (IOException e) {
                        JOptionPane.showMessageDialog(null, "Error to acces the file! \n\r ERROR:" + e.getStackTrace(), "..: WMS :..", JOptionPane.ERROR_MESSAGE);
                    }
                }
            } else {

                JasperExportManager.exportReportToPdfFile(jp, path + file + ".pdf");
                showReport = path + file + ".pdf";
                JOptionPane.showMessageDialog(null, "Operation finished with success!\n Saved in: " + path + file + ".pdf", "..: WMS :..", JOptionPane.INFORMATION_MESSAGE);
                try {
                    Runtime.getRuntime().exec("rundll32 SHELL32.DLL,ShellExec_RunDLL " + showReport);
                } catch (IOException e) {
                    JOptionPane.showMessageDialog(null, "Error to acces the file! \n\r ERROR:" + e.getMessage(), "..: WMS :..", JOptionPane.ERROR_MESSAGE);
                }

            }

        } catch (HeadlessException | JRException erro) {

            JOptionPane.showMessageDialog(null, "Error!" + erro, "..: WMS :..", JOptionPane.INFORMATION_MESSAGE);

        }
    }

    //Metodo de Finalizar
    public void Finalizar() {
        if (VerificaEstoque()) {
            try {

                SimpleDateFormat fo = new SimpleDateFormat("yyyy-MM-dd");
                OutStockDao dao = new OutStockDao();
                OutStock n = new OutStock();

                Date d = new Date();
                n.setId_customer(idcliente);

                n.setTotal(Double.parseDouble(jTTotalg.getText()));
                n.setDate(fo.format(d));
                n.setId_salesman(Sellers.get(jComboBox2.getSelectedIndex()).getId_salesman());

                dao.add(n);
                int idnota = dao.getLastInvoiceId();

                //adiciona o id da nota para as vendas
                for (int i = 0; i < venda.size(); i++) {
                    venda.get(i).setId_outStock(idnota);
                }

                //inicia o cadastro as vendas
                SaleDao vd = new SaleDao();
                for (int i = 0; i < venda.size(); i++) {
                    vd.add(venda.get(i));
                }

                ProductDao pdao = new ProductDao();
                StockDao edao = new StockDao();
                for (int i = 0; i < venda.size(); i++) {
                    Product p = pdao.getProduct(venda.get(i).getId_prod());
                    Stock e = edao.getStock(p.getId());

                    int sub = e.getAmount() - venda.get(i).getAmount();
                    e.setAmount(sub);
                    edao.update(e);
                    venda.remove(venda.get(i));
                    i = i - 1;
                }

                JOptionPane.showMessageDialog(null, "Successfully registered sale.", "WMS", JOptionPane.INFORMATION_MESSAGE);
                atualizarTabela(venda);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Error!" + ex, "..: WMS :..", JOptionPane.ERROR_MESSAGE);
            }
        }
    }

    public boolean VerificaEstoque() {
        boolean r = true;
        try {
            ProductDao pdao = new ProductDao();
            StockDao edao = new StockDao();
            for (int i = 0; i < venda.size(); i++) {
                Product p = pdao.getProduct(venda.get(i).getId_prod());
                Stock e = edao.getStock(p.getId());

                int sub = e.getAmount() - venda.get(i).getAmount();
                if (sub < 0) {
                    r = false;
                    JOptionPane.showMessageDialog(null, "The amount of" + p.getProduct().toUpperCase() + " \n\r in stock isn't enough.", "WMS", JOptionPane.WARNING_MESSAGE);
                }
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error!" + ex, "..: WMS :..", JOptionPane.ERROR_MESSAGE);
        }
        return r;
    }

    public void EventoChamarPoduto(KeyEvent evt) {
        if (evt.getKeyCode() == 17) {
            la = 1;
        }

        //Para adicionar um cliente
        if (evt.getKeyCode() == 67 && la == 1) {
            la = 0;
            SearchCustomer b = new SearchCustomer();
            b.SetVenda(this);
            b.SetTipo(0);
            b.show();
        }

        //Para adicionar um product
        if (evt.getKeyCode() == 80 && la == 1) {
            la = 0;
            SearchProduct b = new SearchProduct();
            b.SetTipo(1);
            b.SetSaidaVenda(this);
            b.show();
        }

        //Para finalizar a venda completa
        if (evt.getKeyCode() == 70 && la == 1) {
            la = 0;
            FinalizarTotal();
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JLabel jLNVenda;
    private javax.swing.JLabel jLTotal;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTextField jTAddress;
    private javax.swing.JTextField jTCliente;
    private javax.swing.JTextField jTPreco;
    private javax.swing.JTextField jTProduct;
    private javax.swing.JTextField jTTotal;
    private javax.swing.JTextField jTTotal_est;
    private javax.swing.JTextField jTTotalg;
    private javax.swing.JTextField jTValor;
    private javax.swing.JTable jTVendas;
    // End of variables declaration//GEN-END:variables

    //Cria o report da nota
    private void report() {
        Date data = new Date();

        int year = data.getYear() + 1900;
        int day = data.getDate();
        int month = data.getMonth() + 1;
        String days = null, months = null;
        if (day < 10) {
            days = "0" + day;
        } else {
            days = "" + day;
        }
        if (month < 10) {
            months = "0" + month;
        } else {
            months = "" + month;
        }
        String Name = "INVOICE_SALE_N_" + idnota;
        String file = Name;

        ConectionReport con = new ConectionReport();

        //diretorio que vai salvar
        File dir = new File("c:/WMS");
        if (!dir.exists()) {
            dir.mkdir();
        }
        File l = new File("c:/WMS/Reports");
        if (!l.exists()) {
            l.mkdir();
        }
        File li = new File("c:/WMS/Reports/Invoices");
        if (!li.exists()) {
            li.mkdir();
        }

        String showReport;
        String path = "c:/WMS/Reports/Invoices/";
        try {
            con.connect();
            con.executeSQL("select saida.*, product.*, venda.*, cliente.*, funcionario.Name_fun from  saida, product, venda, cliente, funcionario where saida.id_s=" + idnota + " and saida.id_s=venda.id_s and venda.id_p=product.id_p and saida.id_c=cliente.id_c and funcionario.id_fun=saida.id_fun;");

            JRResultSetDataSource jrRS = new JRResultSetDataSource(con.resultset);
            //referencia o jasper
            JasperPrint jp = JasperFillManager.fillReport(getClass().getResourceAsStream("/Jasper/NotaVenda.jasper"), new HashMap(), jrRS);
            JasperViewer jv = new JasperViewer(jp, false);
            jv.setVisible(true);
            jv.setTitle("Invoice - .: WMS :.");
            jv.setIconImage(new ImageIcon(getClass().getResource("/Imagens/windows_icon.png")).getImage());
            jv.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
            // JasperViewer.viewReport(jp,true);
            File arq = new File(path + file + ".pdf");
            if (arq.exists()) {
                int result = JOptionPane.showConfirmDialog(null, "The report" + file + ".pdf already exists.\n Do you want to replace it?", "WMS", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                if (result == JOptionPane.YES_NO_OPTION) {
                    JasperExportManager.exportReportToPdfFile(jp, path + file + ".pdf");
                    showReport = path + file + ".pdf";
                    JOptionPane.showMessageDialog(null, "Operation finished with success!\n Saved in: " + path + file + ".pdf", "WMS", JOptionPane.INFORMATION_MESSAGE);
                    try {
                        Runtime.getRuntime().exec("rundll32 SHELL32.DLL,ShellExec_RunDLL " + showReport);
                    } catch (IOException e) {
                        JOptionPane.showMessageDialog(null, "Error to acces the file! \n\r ERROR:" + e.getStackTrace(), "WMS", JOptionPane.ERROR_MESSAGE);
                    }
                }
            } else {
                JasperExportManager.exportReportToPdfFile(jp, path + file + ".pdf");
                showReport = path + file + ".pdf";
                JOptionPane.showMessageDialog(null, "Operation finished with success!\n Saved in: " + path + file + ".pdf", "WMS", JOptionPane.INFORMATION_MESSAGE);
                try {
                    Runtime.getRuntime().exec("rundll32 SHELL32.DLL,ShellExec_RunDLL " + showReport);
                } catch (IOException e) {
                    JOptionPane.showMessageDialog(null, "Error to acces the file! \n\r ERROR:" + e.getMessage(), "WMS", JOptionPane.ERROR_MESSAGE);
                }

            }
        } catch (HeadlessException | JRException erro) {
            JOptionPane.showMessageDialog(null, "Error!" + erro, "WMS", JOptionPane.INFORMATION_MESSAGE);
        }
    }
}
